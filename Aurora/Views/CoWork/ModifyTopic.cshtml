
@{
    ViewBag.Title = "Modify Topic";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var iconarray = new List<string>();
    iconarray.Add("glyphicon-pencil");
    iconarray.Add("glyphicon-star");
    iconarray.Add("glyphicon-th-list");
    iconarray.Add("glyphicon-blackboard");
    var idx = 0;
}


<script src="../../ckeditor/ckeditor.js"></script>
<link href="~/Scripts/jquery-autocomplete/jquery.auto-complete.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/jquery-autocomplete/jquery.auto-complete.min.js" type="text/javascript"></script>
<script src="~/Scripts/Aurora.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.base64.js" type="text/javascript"></script>


<script type="text/javascript">
    $(function(){
        Aurora.createpageinit();
    })
</script>

<div class="newcontainer">
    <hr style="color:grey;margin-top:1px;margin-bottom:1px;border: 1px solid;border-color:grey" />
    <nav class="col-sm-2 nav-sidebar">
        <ul class="nav">
            <li class="cursor-pointer nav-sidebar-icon">
                <span class="glyphicon glyphicon-menu-hamburger sidebar-show"></span>
            </li>
            @foreach (var item in ViewBag.NavList)
            {
                if (idx == 0)
                {
                    <li class="activenavitem active" navid="@item">
                        <a href="">
                            <span class="glyphicon @(iconarray[idx%4])" data-toggle="tooltip" title="@item"></span>
                            <span class="item-show">@item</span>
                        </a>
                    </li>
                }
                else
                {
                    <li navid="@item">
                        <a href="/CoWork/Home?activenavitem=@item">
                            <span class="glyphicon @(iconarray[idx%4])" data-toggle="tooltip" title="@item"></span>
                            <span class="item-show">@item</span>
                        </a>
                    </li>
                }

                idx = idx + 1;
            }
        </ul>
    </nav>

    <div class="col-sm-9 create-editor-div">
        @using (Html.BeginForm("ModifyTopicPost", "CoWork", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">

                @*<div class="mdeditor-op">
                    <span class="glyphicon glyphicon-paperclip maineditor-attach btn-file" data-toggle="tooltip" title="choose attachment" style="height:40px;width:40px;text-align:center;font-weight:bold;font-size:28px;">
                        <input class="btn-available" type="file" name="file1" id="file1" runat="server" onchange="ShowFileNamex(this)" />
                    </span>
                </div>*@
                <textarea name="JobTopicEditor" id="JobTopicEditor" rows="50" cols="80">@(ViewBag.tcontent)</textarea>
                <script>
                    CKEDITOR.replace('JobTopicEditor', { htmlEncodeOutput: true, skin: 'moono-lisa',height:'360px' });
                </script>

            </div>

            <div class="form-group">
                <div class="row">

                    <div class="col-xs-2">
                        <input type="submit" class="form-control btn btn-success" value="Submit">
                    </div>
                    <div class="col-xs-10">
                        <input id="navid" name="navid" value="@(ViewBag.activenavitem)" type="hidden">
                        <input id="topicid" name="topicid" value="@(ViewBag.topicid)" type="hidden">
                        <input id="commentid" name="commentid" value="@(ViewBag.commentid)" type="hidden">
                    </div>

                    <script type="text/javascript">
                    function ShowFileNamex(oFile) {
                                ajaxFileUploadx();
                            }
                    function ajaxFileUploadx() {
                        $.ajaxFileUpload
                        (
                            {
                                url: '/userfiles/ImageUpload.ashx',
                                secureuri: false,
                                fileElementId: 'file1',
                                dataType: 'HTML',
                                success: function (data, status)
                                {
                                    var wholeval = CKEDITOR.instances.JobTopicEditor.getData() + data;
                                    CKEDITOR.instances.JobTopicEditor.setData(wholeval);
                                },
                                error: function (e)
                                {
                                    alert(e);
                                }
                            }
                        )
                        return false;
                    }
                    </script>
                </div>
            </div>
        }
    </div>

    <div class="col-sm-1 create-tool-div">
        <div class="create-tool-item maineditor-attach" data-toggle="tooltip" title="Add Attachment">
            <span class="glyphicon glyphicon-paperclip maineditor-attach-icon btn-file" style="text-align:center;">
                <input class="btn-available" type="file" name="file1" id="file1" runat="server" onchange="ShowFileNamex(this)" />
            </span>
        </div>
    </div>



    <div id="videorecorder">
        <video id="viredemovideoele"></video>
        <span style="font-size:20px;" id="countdown"></span>
    </div>

    @*<input id="playback" value="PlayBack" type="button" />*@
    <input id="clearrecording" value="Clear Recording" type="button" />
    <input id="startRecrodBut1" value="Start Recording" type="button" />
    <input id="stopRecBut1" value="Stop Recording" type="button" />
    <input id="uploadrecord" value="Upload Recording" type="button" />


    @*</br>
    <p id="status"></p>
    <video id="recordedvideo" controls></video>
    <audio id="audiored" controls></audio>
    <a id="downloadurl">Download</a>
    <div id="progressNumber" style="font-size:20px;"></div>*@




    <script src="~/Scripts/VideoRecorderJs-master/dist/VideoRecorderJS.min.js" type="text/javascript"></script>

    <script type="text/javascript">


    var startRecord = document.getElementById("startRecrodBut1");
    var stopRecord = document.getElementById("stopRecBut1");
    var countdownElement = document.getElementById("countdown");
    //var playBackRecord = document.getElementById("playback");
    var discardRecordng = document.getElementById("clearrecording");
    var uploadrecording = document.getElementById("uploadrecord");
    //var progressNumber = document.getElementById("progressNumber");


    var virec = new VideoRecorderJS.init(
            {
                resize: 0.8, // recorded video dimentions are 0.4 times smaller than the original
                webpquality: 0.5, // chrome and opera support webp imags, this is about the aulity of a frame
                framerate: 15,  // recording frame rate
                videotagid: "viredemovideoele",
                videoWidth: "640",
                videoHeight: "480",
                log: true,
                workerPath: "../../Scripts/VideoRecorderJs-master/dist/recorderWorker.js"
            },
            function () {
                //success callback. this will fire if browsers supports
            },
            function (err) {
                //onerror callback, this will fire for mediaErrors
                if (err.name == "BROWSER_NOT_SUPPORTED") {
                    //handler code goes here
                } else if (err.name == "PermissionDeniedError") {
                    //handler code goes here
                } else if (err.name == "NotFoundError") {
                    //handler code goes here
                } else {
                    throw 'Unidentified Error.....';
                }

            }
    );

    startRecord.addEventListener("click", function () {
        virec.startCapture(); // this will start recording video and the audio
        stopCountDown();
        startCountDown();
    });

    stopRecord.addEventListener("click", function () {
        /*
         stops the recording and after recording is finalized oncaptureFinish call back
         will occur
         */
        virec.stopCapture(oncaptureFinish);
        stopCountDown();
    });

    //playBackRecord.addEventListener("click", function () {
    //    /*
    //     Clientside playback,
    //     */
    //    virec.play();
    //});

    discardRecordng.addEventListener("click", function () {
        /*
         Clears the current recorded video + audio allowing
         another recording to happen
         */
        virec.clearRecording();
        stopCountDown();
    });

    uploadrecording.addEventListener("click", function () {
        if (videoblob) {

            alert('try to upload data');

            var fd = new FormData();
            fd.append('fname', 'myvideo.webm');
            fd.append('data', videoblob);

            $.ajax({
                type: 'POST',
                url: '/CoWork/UploadVideoData',
                data: fd,
                processData: false,
                contentType: false
            }).done(function (output) {
                alert(output.data);
                var wholeval = CKEDITOR.instances.JobTopicEditor.getData() + output.data;
                CKEDITOR.instances.JobTopicEditor.setData(wholeval);
            });


            //$.post('/CoWork/UploadVideoData', {
            //    videobase: videobase64
            //}, function (output) {
            //    alert(output.data);
            //    var wholeval = CKEDITOR.instances.JobTopicEditor.getData() + output.data;
            //    CKEDITOR.instances.JobTopicEditor.setData(wholeval);
            //})
        }
        /*
         Uploading the content to the server, here I have sliced the blobs into chunk size
         of 1048576 bits so that uploading time will reduce.
         Gmail uses this same technique when we attach some files to a mail, it slize the file
         in the client side and then uploads chunk by chunk
         */
        //var uploadoptions = {
        //    blobchunksize: 1048576,
        //    requestUrl: "../../userfiles/ImageUpload.ashx",
        //    requestParametername: "filename",
        //    videoname: "video.webm",
        //    audioname: "audio.wav"
        //};
        //virec.uploadData(uploadoptions, function (totalchunks, currentchunk) {
        //    if (currentchunk === totalchunks)
        //    {
        //        alert('finish upload');
        //    }
            
        //     //This function will callback during, each successfull upload of a blob
        //     //so you can use this to show a progress bar or something
             
        //    //progressNumber.innerHTML = ((currentchunk / totalchunks) * 100);
        //    //console.log(currentchunk + " OF " + totalchunks);
        //});
    });


    //------------------------------- few functions that demo, how to play with the api --------------------------

    var countdowntime = 60;
    var functioncalltime = 0;
    var timerInterval = null;
    var videoblob = null;

    function oncaptureFinish(result) {
        //document.getElementById('status').innerHTML = "";
        result.forEach(function (item) {
            if (item.type == "video") {
                videoblob = item.blob;

                //var myReader = new FileReader();
                //myReader.addEventListener("loadend", function () {
                //    console.log(myReader.result);
                //    videoblob = myReader.result;
                //});
                //myReader.readAsArrayBuffer(item.blob);

                //var videobase64 = window.URL.createObjectURL(videoblob);
                //document.getElementById('recordedvideo').src = videobase64;
                //document.getElementById('downloadurl').style.display = '';
                //document.getElementById('downloadurl').href = videobase64;
                //document.getElementById('status').innerHTML = document.getElementById('status').innerHTML + "video=" + Math.ceil(videoblob.size / (1024)) + "KB";

            }
            //else if (item.type == "audio") {
            //    var audioblob = item.blob;
            //    document.getElementById('audiored').src = window.URL.createObjectURL(audioblob);
            //    document.getElementById('status').innerHTML = document.getElementById('status').innerHTML + "Audio=" + Math.ceil(audioblob.size / (1024)) + "KB";
            //}
        });
    }

    function setCountDownTime(time) {
        countdownElement.innerHTML = time;
        return time;
    }


    function startCountDown() {
        if (timerInterval == null) {
            functioncalltime = countdowntime;
            var value = setCountDownTime(functioncalltime);
            timerInterval = setInterval(function () {
                var value = setCountDownTime(--functioncalltime);
                if (value == 0) {
                    clearInterval(timerInterval);
                    virec.stopCapture(oncaptureFinish);
                }
            }, 1000);
        }
    }

    function stopCountDown() {
        if (timerInterval) {
            clearInterval(timerInterval);
            timerInterval = null;
        }
    }
    </script>

</div>


